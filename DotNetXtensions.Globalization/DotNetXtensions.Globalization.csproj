<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net6.0</TargetFrameworks>
    <VersionPrefix>2.1.0</VersionPrefix>
    <Authors>Nicholas Petersen</Authors>
    <RepositoryUrl>https://github.com/copernicus365/DotNetXtensions/tree/master/DotNetXtensions.Globalization</RepositoryUrl>
    <PackageProjectUrl>https://github.com/copernicus365/DotNetXtensions/tree/master/DotNetXtensions.Globalization</PackageProjectUrl>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>time-zones tz globalization country state enums dotnet dotnet-core helper-functions</PackageTags>
    <PackageReleaseNotes />
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <Description>
      - Timezone / TZ types for easily getting a `TimeZoneInfo` from a TZ identifer.
      - World countries enum and a U.S. and Canada states enum, with GeoNames helper (with helper dictionaries on country / state names, etc), and so forth.
    </Description>
    <NoWarn>1701;1702;1705;0159;1591;</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\DotNetXtensions\DotNetXtensions.csproj" />
  </ItemGroup>
</Project>


<!--<PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp3.1' OR '$(TargetFramework)' == 'net5.0' OR '$(TargetFramework)' == 'net6.0'">
    <DefineConstants>NETCORE</DefineConstants>
  </PropertyGroup>-->

<!-- .NET 4.6 references, compilation flags and build options -->
<!--<PropertyGroup Condition=" '$(TargetFramework)' == 'net461'">
    <DefineConstants>NETFULL</DefineConstants>
  </PropertyGroup>-->
<!--<PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^net\d'))">
    <DefineConstants>NETFRAMEWORK</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^netstandard\d'))">
    <DefineConstants>NETSTANDARD</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^netcoreapp\d'))">
    <DefineConstants>NETCORE</DefineConstants>
  </PropertyGroup>-->
